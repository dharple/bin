#!/usr/bin/env php
<?php

if ($argc < 2) {
	sprintf(STDERR, "Please specify a file to review\n");
    exit(1);
}

$commonRatios = [
    // classics

    [ 'height' => '4',  'width' => '3'  ],
    [ 'height' => '16', 'width' => '9'  ],
    [ 'height' => '16', 'width' => '10' ],

    // others

    [ 'height' => '1',  'width' => '1'  ],
    [ 'height' => '3',  'width' => '2'  ],
    [ 'height' => '5',  'width' => '4'  ],
    [ 'height' => '11', 'width' => '8'  ],
    [ 'height' => '14', 'width' => '9'  ],
    [ 'height' => '16', 'width' => '5'  ],
    [ 'height' => '19', 'width' => '16' ],
    [ 'height' => '21', 'width' => '9'  ],
    [ 'height' => '39', 'width' => '18' ],
];

$file       = $argv[1];
$fileSize   = getimagesize($file);
if ($fileSize === false) {
	sprintf(STDERR, "Could not read file size\n");
    exit(1);
}

$fileHeight = $fileSize[0];
$fileWidth  = $fileSize[1];

foreach ($commonRatios as $reviewRatio) {

    $compareHeight = $fileHeight / $reviewRatio['height'];
    $compareWidth  = $fileWidth  / $reviewRatio['width'];

    if (abs($compareHeight - $compareWidth) < 2.0) {
        printf("%s: %dx%d\n", $file, $reviewRatio['height'], $reviewRatio['width']);
        exit(0);
    }

    $inverseRatio = [
        'width'  => $reviewRatio['height'],
        'height' => $reviewRatio['width'],
    ];

    $compareHeight = $fileHeight / $inverseRatio['height'];
    $compareWidth  = $fileWidth  / $inverseRatio['width'];

    if (abs($compareHeight - $compareWidth) < 2.0) {
        printf("%s: %dx%d\n", $file, $inverseRatio['height'], $inverseRatio['width']);
        exit(0);
    }
}

exit(1);

// vim:ai:cin:et:ts=4:sw=4:fo+=or
